@model PrismaCatalogo.Front.Cliente.Models.ProdutoAvaliacoesViewModel

<div class="container mt-5">
    <div class="card  border-light ">
        <div class="card-body">
            <div class="row">
                <div class="col-md-4 text-center">
                    <h1 class="display-4 mt-3 mb-4">@(Model.AvaliacaoMedia)</h1>
                    <div class="mb-3">
                        @await Component.InvokeAsync("Estrelas", new { num = Convert.ToInt32(Model.AvaliacaoMedia) })
                       @*  <i class="bi bi-star-fill text-warning"></i>
                        <i class="bi bi-star-fill text-warning"></i>
                        <i class="bi bi-star-fill text-warning"></i>
                        <i class="bi bi-star-fill text-warning"></i>
                        <i class="bi bi-star-half text-warning"></i> *@
                    </div>
                    <h6 class="text-muted">Avaliações totais @(Model.QuantTotal)</h6>

                    <div class="text-center mt-4">
                        <button  class="btn btn-padrao" id="EscreveAvaliacao" @* data-bs-toggle="modal" data-bs-target="#ratingModal"*@>Avalie</button>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="rating-bars">

                        @for(int i = 0; i < Model.PosentagemAvaliacao.Count(); i++) {

                            <div class="rating-bar mb-3">
                                <div class="d-flex justify-content-between align-items-center mb-1">
                                    <span>@(i + 1) stars</span>
                                    <small class="text-muted">@(Model.PosentagemAvaliacao[i])%</small>
                                </div>
                                <div class="progress" style="height: 10px;">
                                    <div class="progress-bar bg-warning" role="progressbar" style="width: @(Model.PosentagemAvaliacao[i])%;" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>


        


    </div>
</div>

<div class="modal fade" id="ratingModal" tabindex="-1" aria-labelledby="ratingModalLabel" aria-hidden="true">
    <div id="ratingModal-modal-dialog" class="modal-dialog">
    </div>
</div>


@* <!-- Rating Modal -->
<div class="modal fade" id="ratingModal" tabindex="-1" aria-labelledby="ratingModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ratingModalLabel">Write a Review</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label for="rating" class="form-label">Your Rating</label>
                        <div class="star-rating">
                            <i class="bi bi-star rating-star" data-rating="1"></i>
                            <i class="bi bi-star rating-star" data-rating="2"></i>
                            <i class="bi bi-star rating-star" data-rating="3"></i>
                            <i class="bi bi-star rating-star" data-rating="4"></i>
                            <i class="bi bi-star rating-star" data-rating="5"></i>
                        </div>
                        <input type="hidden" id="rating" name="rating" value="0">
                    </div>
                    <div class="mb-3">
                        <label for="review" class="form-label">Your Review</label>
                        <textarea class="form-control" id="review" rows="3" required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-padrao">Submit Review</button>
            </div>
        </div>
    </div>
</div>
 *@

<h5>Comentários:</h5>
<br />

<div>
    @foreach (var avaliacao in Model.Avaliacoes)
    {


        <div class="card border-secondary  mb-3" @* style="max-width: 18rem;" *@>
            <div class="card-header">
                @avaliacao.NomeUsuario:
                <small style="float: inline-end;">Nota: @avaliacao.Nota ⭐</small>
            </div>
            <div class="card-body">
                @* <h5 class="card-title">Dark card title</h5> *@
                <p class="card-text">@avaliacao.Mensagem</p>
                @if (User.IsInRole("Funcionario"))
                {
                    <div>
                        <button class="btn btn-danger" onclick="deletaComentario(@avaliacao.Id, @avaliacao.ProdutoId)">Apagar</button>
                    </div>
                }
            </div>
        </div>
    @* 
        <div class="alert alert-secondary" style="text-align: justify;">
            <strong>@avaliacao.NomeUsuario:</strong> @avaliacao.Mensagem
            <br><small>Nota: @avaliacao.Nota ⭐</small>
            @if (User.IsInRole("Funcionario"))
            {
                <div>
                    <button class="btn btn-danger" onclick="deletaComentario(@avaliacao.Id, @avaliacao.ProdutoId)">Apagar</button>
                </div>
            }
        </div> *@
    }
</div>
<script>

  


    @if (User.IsInRole("Funcionario"))
    {
        <text>
            function deletaComentario(id, idProduto){
                $.ajax({
                    type: "POST",
                    url: '@Html.Raw(@Url.Action("Delete", "Avaliacao"))',
                    data: { id: id },
                    success: function (response) {
                        $.ajax({
                            type: "GET",
                            url: '@Html.Raw(@Url.Action("ObterAvaliacoes", "Avaliacao"))' + "?produtoId=" + idProduto,
                            success: function (data) {
                                $("#lista-avaliacoes").html(data); // Atualiza a lista de avaliações
                                // $("#resposta").html("<div class='alert alert-success'>Avaliação deletada com sucesso!</div>");
                            }
                        });
                 
                    },
                    error: function (xhr, status, error) {
                        $("#resposta").html("<div class='alert alert-danger'>Erro ao enviar avaliação</div>");
                    }
                })
            }
        </text>
    }

   

    @if (User.FindFirst("Id") != null)
    {
        <text>
        $("#EscreveAvaliacao").click(function() {
        $.ajax({
                url: '@Html.Raw(@Url.Action("ObterAvaliacaoUsuario", "Avaliacao", new { produtoId = Model.ProdutoId, usuarioId = User.FindFirst("Id")?.Value.Trim() }))',
        type: 'GET',
        success: function(response) {
        $("#ratingModal-modal-dialog").html(response); // Adiciona o modal à página
        $("#ratingModal").modal("show"); // Abre o modal
                    },
        error: function() {
                        alert("Erro ao carregar o modal.");
                    }
                })
            });

             </text>
    }


       

</script>